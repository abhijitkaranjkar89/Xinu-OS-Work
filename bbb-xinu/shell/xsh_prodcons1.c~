#include <ctype.h>
#include <prodcons.h>


int n[15];                 
/*Now global variable n will be on Heap so it is accessible all the processes i.e. consume and produce*/

int isNumber(const char *val)	{	
	while(*val != '\0')	{
		if(*val < '0' || *val > '9')	{
			return 0;
		}
		val++;
	}
	return 1;
}
shellcmd xsh_prodcons(int nargs, char *args[])
{
      //Argument verifications and validations

	int count = 2000;             //local varible to hold count
	int i=0;
//initialize entire buffer to 0
	for(i=0;i<15;i++)	{
		n[i] = 0;
	}
	
	if (nargs == 2) {		
		if(strncmp(args[1], "--help", 7) == 0)	{
			printf("\nThis command executes producer & consumer!\n");
		}else if(args[1], "-f", 3) == 0)	{

			future *f1, *f2, *f3;
 
  f1 = future_alloc(FUTURE_EXCLUSIVE);
  f2 = future_alloc(FUTURE_EXCLUSIVE);
  f3 = future_alloc(FUTURE_EXCLUSIVE);
 
  resume( create(future_cons, 1024, 20, "fcons1", 1, f1) );
  resume( create(future_prod, 1024, 20, "fprod1", 1, f1) );
  resume( create(future_cons, 1024, 20, "fcons2", 1, f2) );
  resume( create(future_prod, 1024, 20, "fprod2", 1, f2) );
  resume( create(future_cons, 1024, 20, "fcons3", 1, f3) );
  resume( create(future_prod, 1024, 20, "fprod3", 1, f3) );
	}
		else	{
			if(isNumber(args[1]) == 1)	{		
				count = atoi(args[1]);	
				//create the process producer and consumer and put them in ready queue.
			  	//Look at the definations of function create and resume in exinu/system folder for reference.      
	      			resume( create(producer, 1024, 20, "producer", 1, count) );
	      			resume( create(consumer, 1024, 20, "consumer", 1, count) );
			}
			else	{
				printf("\nIncorrect value entered! Please inter the numeric value.\n");
			}
		}
	}
	else 
		if(nargs == 1)	{
			resume( create(producer, 1024, 20, "producer", 1, count) );
      			resume( create(consumer, 1024, 20, "consumer", 1, count) );
		} 
		else	{
			printf("\nMore than one parameters are not allowed!\n");
		}
	      
}

